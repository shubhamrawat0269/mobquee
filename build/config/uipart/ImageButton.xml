<?xml version="1.0" encoding="utf-8"?>
<item targetClass="ImageButton" mockup="com.mobilous.builder.client.pageeditor.editor.mockup.ImageButton.ImageButtonView" visible="true" visibleInTableView="true" imagePath="assets/toolbox/ico_image.png" description="Here is the ImageButton description"
		helpLink_EN="/image_button2.htm" helpLink_JP="/sheet002.htm#RANGE!A600">
	<properties>
		<type name="Type" @stopCommit="true">
			<property path="name" input="spark.components.TextInput">
				<validations>
					<validation validator="UniqUINameValidator">
						<args>
							<arg property="currentSettings" value="{@currentSettings:}"/>
							<arg property="pageContainerDic" value="{@page:}"/>
							<arg property="uiPartDic" value="{@base:}"/>
							<arg property="tableViewCellDic" value="{@tableviewCell:}"/>
							<arg property="toolbarUiDic" value="{@toolbarUiDic:}"/>
						</args>
					</validation>
				</validations>
			</property>
			<property path="fieldname" input="spark.components.DropDownList123">
				<dataSource source="@dbTable:fieldswithBracket" labelField="fieldname" />
				<dependentActions>
					<when condition="compare" compareTarget="@dbTable:" compareBy="IS_NULL_OR_EMPTY" at="initForm" @stopCommit="true">
						<action target="{@form[fieldname]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[fieldname]:}" method="folded" value="false" caseOf="false"/>
						<action target="{@form[fieldname]:}" method="setOptions" value="@dbTable:fieldswithBracket" labelField="fieldname" caseOf="false"/> 
					</when>
					<when condition="compare" compareTarget="{@form[fieldname]:value}" compareBy="IS_NULL_OR_EMPTY" at="postCommit">
						<action target="{@form[on]:}" method="setValue" value="{@form[fieldname]:value}" chainedEvent="change" caseOf="false"/>
					</when>
				</dependentActions>
			</property>
			<property path="normalImage" dataType="ImageFileDic" input="TextInputWithButton" copyable="true"/>
		    <property path="normalBackgroundImage" dataType="ImageFileDic" input="TextInputWithButton" init="defaultImage.png" copyable="true"/>
			<property path="selectedImage" dataType="ImageFileDic" input="TextInputWithButton" copyable="true"/>		
		    <property path="selectedBackgroundImage" dataType="ImageFileDic" input="TextInputWithButton" copyable="true"/>
			<property path="draggable" dataType="Boolean" input="spark.components.CheckBox" value="false" copyable="true"/>
			<property path="showElevation" dataType="Boolean" input="spark.components.CheckBox" value="false" copyable="true"/>
			<property path="enableRipple" dataType="Boolean" input="spark.components.CheckBox" value="false" copyable="true"/>
			<property path="hidden" dataType="Boolean" input="spark.components.CheckBox" value="false" copyable="true"/>
		</type>
		<type name="Style" @stopCommit="true">
			<property path="borderWeight" dataType="Number" input="spark.components.NumericStepper" min="0" max="10" inc="1" init="0" copyable="true"/>
			<property path="borderColor" dataType="ColorDic" input="mx.controls.ColorPicker" copyable="true"/>
			<property path="borderColor.alpha" input="spark.components.NumericStepper" min="0.0" max="1.0" inc="0.1" init="0" copyable="true"/>
		</type>
		
		<type name="Actions">
			<property path="actions.clicked" input="LabelWithButton" />	
			<property path="actions.flickRL" input="LabelWithButton" />
			<property path="actions.flickLR" input="LabelWithButton" />
		</type>
		<type name="Geometry" @stopCommit="true">
			<property path="frame.x" dataType="Number" input="spark.components.NumericStepper" min="0" max="10000" copyable="true"/>
			<property path="frame.y" dataType="Number" input="spark.components.NumericStepper" min="0" max="10000" copyable="true"/>
			<property path="frame.width" dataType="Number" input="spark.components.NumericStepper" min="5" max="10000" init="88" copyable="true"/>
			<property path="frame.height" dataType="Number" input="spark.components.NumericStepper" min="5" max="10000" init="44" copyable="true"/>
			<property path="frame.rotation" input="spark.components.NumericStepper" min="0" max="360" inc="5" copyable="true"/>
		</type> 
	</properties>
</item>
