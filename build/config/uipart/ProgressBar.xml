<?xml version="1.0" encoding="utf-8"?>
<item targetClass="ProgressBar" mockup="com.mobilous.builder.client.pageeditor.editor.mockup.ProgressBar.ProgressBarView" visible="true" visibleInTableView="true" imagePath="assets/toolbox/ico_progress.png" description="Here is the label description"
		helpLink_EN="/progress_bar2.htm" helpLink_JP="/sheet002.htm#RANGE!A1450">
	<properties>
		<type name="Type" @stopCommit="true">
			<property path="name" input="spark.components.TextInput">
				<validations>
					<validation validator="UniqUINameValidator">
						<args>
							<arg property="currentSettings" value="{@currentSettings:}"/>
							<arg property="pageContainerDic" value="{@page:}"/>
							<arg property="uiPartDic" value="{@base:}"/>
							<arg property="tableViewCellDic" value="{@tableviewCell:}"/>
							<arg property="toolbarUiDic" value="{@toolbarUiDic:}"/>
						</args>
					</validation>
				</validations>
			</property>
			 <property path="fieldname" input="spark.components.DropDownList123">
				<dataSource source="@dbTable:fieldswithBracket" labelField="fieldname" />
				<dependentActions>
					<when condition="compare" compareTarget="@dbTable:" compareBy="IS_NULL_OR_EMPTY" at="initForm" @stopCommit="true">
						<action target="{@form[fieldname]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[fieldname]:}" method="folded" value="false" caseOf="false"/>
						<action target="{@form[fieldname]:}" method="setOptions" value="@dbTable:fieldswithBracket" labelField="fieldname" caseOf="false"/> 
					</when>
					<when condition="compare" compareTarget="{@form[fieldname]:value}" compareBy="IS_NULL_OR_EMPTY" at="postCommit">
						<action target="{@form[progress]:}" method="setValue" value="{@form[fieldname]:value}" chainedEvent="change" caseOf="false"/>
					</when>
				</dependentActions>
			</property>	
			<property path="progress" dataType="Number" input="spark.components.NumericStepper" min="0" max="1" init="0.1" inc="0.1" useForDbField="true" copyable="true"/>
			<property path="style" dataType="array" input="spark.components.DropDownList" init="Bar" copyable="true">
			  <dataSource>
				 <data name="Bar"/>
				 <data name="Circle"/>
			  </dataSource>
			  <dependentActions>
    		        <when condition="compare" compareTarget="{@form[style]:value}" compareBy="EQ" compareWith="Bar" at="initForm, postCommit">
						<action target="{@form[arcRadius]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[borderColor]:}" method="hide" value="true" caseOf="true" />
						<action target="{@form[borderColor.alpha]:}" method="hide" value="true" caseOf="true" />
						<action target="{@form[borderWeight]:}" method="hide" value="true" caseOf="true" />
						<action target="{@form[cornerRadius]:}" method="hide" value="true" caseOf="true" />
						<action target="{@form[frame.width]:}" method="hide" value="true" caseOf="true" />
						<action target="{@form[frame.height]:}" method="hide" value="true" caseOf="true" />
			        </when>
	 		        <when condition="compare" compareTarget="{@form[style]:value}" compareBy="EQ" compareWith="Circle" at="initForm, postCommit">
						<action target="{@form[arcRadius]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[borderColor]:}" method="hide" value="false" caseOf="true" />
						<action target="{@form[borderColor.alpha]:}" method="hide" value="false" caseOf="true" />
						<action target="{@form[borderWeight]:}" method="hide" value="false" caseOf="true" />
						<action target="{@form[cornerRadius]:}" method="hide" value="false" caseOf="true" />
						<action target="{@form[frame.width]:}" method="hide" value="false" caseOf="true" />
						<action target="{@form[frame.height]:}" method="hide" value="false" caseOf="true" />
					</when>
			    </dependentActions>
			</property>			
			<property path="arcRadius" input="spark.components.NumericStepper" min="10" max="100" inc="1" copyable="true"/>
			<property path="hidden" dataType="Boolean" input="spark.components.CheckBox" value="false" copyable="true"/>
		</type>
		
		<type name="Style" @stopCommit="true">
			<property path="backgroundColor" dataType="ColorDic" input="mx.controls.ColorPicker" init="0" copyable="true"/>
			<property path="fillColor" dataType="ColorDic" input="mx.controls.ColorPicker" init="0" copyable="true"/>
			<property path="borderColor" dataType="ColorDic" input="mx.controls.ColorPicker" copyable="true"/>
			<property path="borderColor.alpha" input="spark.components.NumericStepper" min="0.0" max="1.0" inc="0.1" copyable="true"/>
			<property path="borderWeight" dataType="Number" input="spark.components.NumericStepper" min="0" max="5" inc="1" init="0" copyable="true"/>
		</type>
		
		<type name="Geometry" @stopCommit="true">
			<property path="frame.x" dataType="Number" input="spark.components.NumericStepper" min="0" max="10000" copyable="true"/>
			<property path="frame.y" dataType="Number" input="spark.components.NumericStepper" min="0" max="10000" copyable="true"/>
			<property path="frame.width" dataType="Number" input="spark.components.NumericStepper" min="120" max="10000" init="200" copyable="true"/>
			<property path="frame.height" dataType="Number" input="spark.components.NumericStepper" min="8" max="56" init="15" copyable="true"/>
		</type> 
	</properties>
</item>
