<?xml version="1.0" encoding="utf-8"?>
<item targetClass="WebView" mockup="com.mobilous.builder.client.pageeditor.editor.mockup.WebView.WebPageView" visible="true" imagePath="assets/toolbox/ico_www.png" description="Here is the label description"
		helpLink_EN="/web_view2.htm" helpLink_JP="/sheet002.htm#RANGE!A350">
	<properties>
		<type name="Type" @stopCommit="true">
			<property path="name" input="spark.components.TextInput">
				<validations>
					<validation validator="UniqUINameValidator">
						<args>
							<arg property="currentSettings" value="{@currentSettings:}"/>
							<arg property="pageContainerDic" value="{@page:}"/>
							<arg property="uiPartDic" value="{@base:}"/>
							<arg property="tableViewCellDic" value="{@tableviewCell:}"/>
							<arg property="toolbarUiDic" value="{@toolbarUiDic:}"/>
						</args>
					</validation>
				</validations>
			</property>
			<property path="filename.url" dataType="String" input="spark.components.TextInput" copyable="true"/>
			<property path="scalesPageToFit" dataType="Boolean" input="spark.components.CheckBox" copyable="true"/>
			<property path="hidden" dataType="Boolean" input="spark.components.CheckBox" value="false" copyable="true"/>
		</type>
		<type name="Style" @stopCommit="true">
			<property path="borderColor" dataType="ColorDic" input="mx.controls.ColorPicker" copyable="true"/>
			<property path="borderColor.alpha" input="spark.components.NumericStepper" min="0.0" max="1.0" inc="0.1" copyable="true"/>
			<property path="borderWeight" dataType="Number" input="spark.components.NumericStepper" min="0" max="10" inc="1" init="0" copyable="true"/>
			<property path="boxShadow" dataType="Boolean" input="spark.components.CheckBox" value="false" disable="true">
				<dependentActions>
					<when condition="compare" compareTarget="{@form[boxShadow]:value}" compareBy="EQ" compareWith="1" at="initForm, postCommit">
						<action target="{@form[boxShadowWidth]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[boxShadowWidth]:}" method="folded" value="true" caseOf="false"/>
						<action target="{@form[boxShadowColor]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[boxShadowColor]:}" method="folded" value="true" caseOf="false"/>						
					</when>
				</dependentActions>
			</property>
			<property path="boxShadowWidth" input="spark.components.NumericStepper" min="0" max="10" inc="1" disable="true"/>
			<property path="boxShadowColor" dataType="ColorDic" input="mx.controls.ColorPicker" disable="true"/>
		</type>		
		<type name="Actions">
			<property path="actions.DidStartLoad" input="LabelWithButton" />
			<property path="actions.DidFailToLoad" input="LabelWithButton" />			
			<property path="actions.DidFinishLoad" input="LabelWithButton" />
		</type>
		<type name="Geometry" @stopCommit="true">
			<property path="frame.x" dataType="Number" input="spark.components.NumericStepper" min="0" max="9999" copyable="true"/>
			<property path="frame.y" dataType="Number" input="spark.components.NumericStepper" min="0" max="9999" copyable="true"/>
			<property path="frame.width" dataType="Number" input="spark.components.NumericStepper" min="100" max="9999" init="100" copyable="true"/>
			<property path="frame.height" dataType="Number" input="spark.components.NumericStepper" min="100" max="9999" init="100" copyable="true"/>
		</type> 
	</properties>
</item>
