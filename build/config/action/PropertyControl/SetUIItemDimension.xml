<?xml version="1.0" encoding="utf-8"?>
<item targetClass="setUIItemDimension" category="ControlAction" type="Property" method="setUIItemDimension"
		helpLink_EN="" helpLink_JP="â€Œ">
	<properties>
		<type name="parameters" input="None">	
			<property path="params.targetPage" input="spark.components.DropDownList">
			    <validations><validation validator="RequiredValueValidator"/></validations>
			    <dataSource source="{@project:getPageCacheList()}" labelField="Title" valueField="pageid"/>
				<dependentActions>
					<when at="initForm, postCommit" condition="compare" compareTarget="{@project:getPageViewType(@form[params.targetPage]:value)}" compareBy="EQ" compareWith="">						
						<action target="{@form[GroupList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[CellList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[params.name]:}" method="folded" value="false" caseOf="true"/>
					</when>
					<when at="initForm, postCommit" condition="compare" compareTarget="{@project:getPageViewType(@form[params.targetPage]:value)}" compareBy="EQ" compareWith="BaseView">						
						<action target="{@form[params.name]:}" method="setOptions" value="{@project:getSpecificTargetUIParts(@form[params.targetPage]:value, @form[base.currentSettings]:value)}" labelField="uiname" valueField="uiname" caseOf="true"/>
						<action target="{@form[GroupList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[CellList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[params.name]:}" method="folded" value="false" caseOf="true"/>
					</when>
					<when at="initForm, postCommit" condition="compare" compareTarget="{@project:getPageViewType(@form[params.targetPage]:value)}" compareBy="EQ" compareWith="ScrollView">						
						<action target="{@form[params.name]:}" method="setOptions" value="{@project:getSpecificTargetUIParts(@form[params.targetPage]:value, @form[base.currentSettings]:value)}" labelField="uiname" valueField="uiname" caseOf="true"/>
						<action target="{@form[GroupList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[CellList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[params.name]:}" method="folded" value="false" caseOf="true"/>
					</when>
					<when at="initForm, postCommit" condition="compare" compareTarget="{@project:getPageViewType(@form[params.targetPage]:value)}" compareBy="EQ" compareWith="SplitView">						
						<action target="{@form[params.name]:}" method="setOptions" value="{@project:getSpecificTargetUIParts(@form[params.targetPage]:value, @form[base.currentSettings]:value)}" labelField="uiname" valueField="uiname" caseOf="true"/>
						<action target="{@form[GroupList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[CellList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[params.name]:}" method="folded" value="false" caseOf="true"/>
					</when>
					<when at="initForm" condition="compare" compareTarget="{@project:getPageViewType(@form[params.targetPage]:value)}" compareBy="EQ" compareWith="TableView">
						<action target="{@form[GroupList]:}" method="folded" value="true" caseOf="true" />
						<action target="{@form[CellList]:}" method="folded" value="true" caseOf="true" />
						<action target="{@form[params.name]:}" method="folded" value="true" caseOf="true" />
					</when>
					<when at="postCommit" condition="compare" compareTarget="{@project:getPageViewType(@form[params.targetPage]:value)}" compareBy="EQ" compareWith="TableView">
						<action target="{@form[GroupList]:}" method="setOptions" value="{@project:getGroupList(@form[params.targetPage]:value)}" valueField="rowarray" labelField="idFieldName" caseOf="true"/>
						<action target="{@form[GroupList]:}"  method="setProperty" property="selectedIndex" value="0" caseOf="true"/> 
						<action target="{@form[GroupList]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[CellList]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[params.name]:}" method="folded" value="true" caseOf="true"/>
					</when>
					<when at="initForm, postCommit" condition="compare" compareTarget="{@project:getPageViewType2(@form[params.targetPage]:value)}" compareBy="EQ" compareWith="TableViewList">						
						<action target="{@form[params.name]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[params.name]:}" method="setOptions" value="{@project:getSpecificTargetUIParts(@form[params.targetPage]:value, @form[base.currentSettings]:value)}" labelField="uiname" valueField="uiname" caseOf="true"/>
						<action target="{@form[GroupList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[CellList]:}" method="folded" value="true" caseOf="true"/>
					</when>
				</dependentActions>
			</property>
			<property formKey="GroupList" input="spark.components.DropDownList" labelField="idFieldName" valueField="rowarray">
				<dependentActions>
					<when at="postCommit" condition="compare" compareTarget="{@form[GroupList]:value}" compareBy="NE" compareWith="">						
						<action target="{@form[CellList]:}" method="setOptions" value="{@form[GroupList]:value}"  labelField="name"  caseOf="true"/>
						<action target="{@form[CellList]:}"  method="setProperty" property="selectedIndex" value="-1" caseOf="true"/>
					</when>	
					<when at="initForm">						
						<action target="{@form[GroupList]:}" method="folded" value="true" caseOf="true"/>
					</when>	
				</dependentActions>
			</property>
			<property formKey="CellList" input="spark.components.DropDownList" labelField="name" >
				 <dependentActions>
					<when at="postCommit" condition="compare" compareTarget="{@form[CellList]:value}" compareBy="NE" compareWith="">
						<action target="{@form[params.name]:}" method="setOptions" value="{@project:getSpecificTargetUIParts(@form[params.targetPage]:value, @form[base.currentSettings]:value, @form[CellList]:value)}" labelField="uiname" valueField="uiname" caseOf="true"/>
					</when>	
					<when at="initForm">					
						<action target="{@form[CellList]:}" method="folded" value="true" caseOf="true"/>
					</when>						
				</dependentActions>
			</property>
			<property path="params.name" input="spark.components.ComboBox" fieldnameRequired="false">
				<validations>
					<validation validator="RequiredValueValidator" />
				</validations>
				<dependentActions>
					<when at="initForm, postCommit" condition="compare" compareTarget="{@form[params.name]:value}" compareBy="NE" compareWith="">
						<action target="{@form[params.items]:}" method="setOptions" value="{@project:getUIItemList(@form[params.targetPage]:value, @form[params.name]:value)}" caseOf="true"/>
					</when>	
				</dependentActions>						
			</property>
			<property path="params.items" input="spark.components.DropDownList" />
			<property path="params.height" input="spark.components.TextInput">
				<validations><validation validator="RequiredValueValidator"/></validations>
			</property>
			
		</type>
		<type name="condition" input="HRule">
			<property path="params.condition" input="LabelWithButton"/>
		</type>
		<type name="resultEvents" input="HRule">
			<property path="actions.success" input="LabelWithButton"/>
			<property path="actions.error" input="LabelWithButton"/>
		</type>
	</properties>
</item>