<?xml version="1.0" encoding="utf-8"?>
<item targetClass="setImage" category="ControlAction" type="Property" method="setImage"
		helpLink_EN="/set_image2.htm" helpLink_JP="/act.htm#_画像を配置する">
	<properties>
		<type name="parameters" input="None">	
			<property path="params.targetPage" input="spark.components.DropDownList">
				<validations><validation validator="RequiredValueValidator"/></validations>
			    <dataSource source="{@project:getPageCacheList()}" labelField="Title" valueField="pageid"/>
				<dependentActions>
					<when at="initForm, postCommit" condition="compare" compareTarget="{@project:getPageViewType(@form[params.targetPage]:value)}" compareBy="EQ" compareWith="">						
						<action target="{@form[GroupList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[CellList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[params.name]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[Name]:}" method="folded" value="true" caseOf="true"/>
					</when>
					<when at="initForm, postCommit" condition="compare" compareTarget="{@project:getPageViewType(@form[params.targetPage]:value)}" compareBy="EQ" compareWith="BaseView">						
						<action target="{@form[params.name]:}" method="setOptions" value="{@project:getUiElementList(@form[params.targetPage]:value, @form[base.currentSettings]:value)}" caseOf="true"/>
						<action target="{@form[params.name]:}"  method="setProperty" property="selectedIndex" value="-1" caseOf="true"/> 
						<action target="{@form[GroupList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[CellList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[params.name]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[Name]:}" method="folded" value="true" caseOf="true"/>
					</when>
					<when at="initForm, postCommit" condition="compare" compareTarget="{@project:getPageViewType(@form[params.targetPage]:value)}" compareBy="EQ" compareWith="ScrollView">						
						<action target="{@form[params.name]:}" method="setOptions" value="{@project:getUiElementList(@form[params.targetPage]:value, @form[base.currentSettings]:value)}" caseOf="true"/>
						<action target="{@form[params.name]:}"  method="setProperty" property="selectedIndex" value="-1" caseOf="true"/> 
						<action target="{@form[GroupList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[CellList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[params.name]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[Name]:}" method="folded" value="true" caseOf="true"/>
					</when>
					<when at="initForm, postCommit" condition="compare" compareTarget="{@project:getPageViewType(@form[params.targetPage]:value)}" compareBy="EQ" compareWith="SplitView">						
						<action target="{@form[params.name]:}" method="setOptions" value="{@project:getUiElementList(@form[params.targetPage]:value, @form[base.currentSettings]:value)}" caseOf="true"/>
						<action target="{@form[params.name]:}"  method="setProperty" property="selectedIndex" value="-1" caseOf="true"/> 
						<action target="{@form[GroupList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[CellList]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[params.name]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[Name]:}" method="folded" value="true" caseOf="true"/>
					</when>
					<when at="initForm" condition="compare" compareTarget="{@project:getPageViewType(@form[params.targetPage]:value)}" compareBy="EQ" compareWith="TableView">
						<action target="{@form[GroupList]:}" method="folded" value="true" caseOf="true" />
						<action target="{@form[CellList]:}" method="folded" value="true" caseOf="true" />
						<action target="{@form[params.name]:}" method="folded" value="true" caseOf="true" />
					</when>
					<when at="postCommit" condition="compare" compareTarget="{@project:getPageViewType(@form[params.targetPage]:value)}" compareBy="EQ" compareWith="TableView">
						<action target="{@form[GroupList]:}" method="setOptions" value="{@project:getGroupList(@form[params.targetPage]:value)}" valueField="rowarray" labelField="idFieldName" caseOf="true"/>
						<action target="{@form[GroupList]:}"  method="setProperty" property="selectedIndex" value="0" caseOf="true"/>
						<action target="{@form[GroupList]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[CellList]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[params.name]:}"  method="setProperty" property="selectedIndex" value="-1" caseOf="true"/> 
						<action target="{@form[params.name]:}" method="setValue" value=""  caseOf="true"/>
						<action target="{@form[params.name]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[Name]:}" method="folded" value="true" caseOf="true"/>
					</when>
				</dependentActions>
			</property>
			<property formKey="GroupList" input="spark.components.DropDownList" labelField="idFieldName" valueField="rowarray">
				<dependentActions>
					<when at="postCommit" condition="compare" compareTarget="{@form[GroupList]:value}" compareBy="NE" compareWith="">						
						<action target="{@form[CellList]:}" method="setOptions" value="{@form[GroupList]:value}"  labelField="name"  caseOf="true"/>
						<action target="{@form[CellList]:}"  method="setProperty" property="selectedIndex" value="-1" caseOf="true"/>
					</when>	
					<when at="initForm">						
						<action target="{@form[GroupList]:}" method="folded" value="true" caseOf="true"/>
					</when>	
				</dependentActions>
			</property>
			<property formKey="CellList" input="spark.components.DropDownList" labelField="name" >
				 <dependentActions>
					<when at="postCommit" condition="compare" compareTarget="{@form[CellList]:value}" compareBy="NE" compareWith="">
						<action target="{@form[params.name]:}" method="setOptions" value="{@project:getUiElementList(@form[params.targetPage]:value, @form[base.currentSettings]:value, @form[CellList]:value)}"  caseOf="true"/>
						<action target="{@form[params.name]:}"  method="setProperty" property="selectedIndex" value="-1" caseOf="true"/> 
						<action target="{@form[params.name]:}" method="folded" value="false" caseOf="true"/>
					</when>	
					<when at="initForm">					
						<action target="{@form[CellList]:}" method="folded" value="true" caseOf="true"/>
					</when>						
				</dependentActions>
			</property>
			
			<property path="params.name" input="spark.components.ComboBox">
				<validations><validation validator="RequiredValueValidator"/></validations>
				<dependentActions>
					<when at="initForm" condition="compare" compareTarget="{@project:getPageViewType(@form[params.targetPage]:value)}" compareBy="EQ" compareWith="TableView">					
 						<action target="{@form[params.name]:}" method="folded" value="true" caseOf="true"/>
 					</when>						
				</dependentActions>
			</property>
			<property formKey="Name" path="params.name" input="spark.components.TextInput">
				<validations><validation validator="RequiredValueValidator"/></validations>
			</property>
			
			<property path="params.reference" input="spark.components.CheckBox" init="0">
				<dependentActions>
					<when condition="compare" compareTarget="{@form[params.reference]:value}" compareBy="EQ" compareWith="0" at="initForm, postCommit">
						<action target="{@form[params.refTargetObject]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[params.refTargetObject]:}" method="folded" value="false" caseOf="false"/>
						<action target="{@form[params.image.srcLocation]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[params.image.srcLocation]:}" method="folded" value="true" caseOf="false"/>
						
						<action method="dependentConditions" caseOf="true">
							<when condition="compare" compareTarget="{@form[params.image.srcLocation]:value}" compareBy="EQ" compareWith="url" at="initForm, postCommit">
								<action target="{@form[params.image.url]:}" method="folded" value="false" caseOf="true"/>
								<action target="{@form[params.image.filename]:}" method="folded" value="true" caseOf="true"/>
								<action target="{@form[params.image.fileext]:}" method="folded" value="true" caseOf="true"/>
								<action target="{@form[libraryImage]:}" method="folded" value="true" caseOf="true"/>
								<action target="{@form[localImage]:}" method="folded" value="true" caseOf="true"/>
							</when>
						</action>
						<action target="{@form[params.image.url]:}" method="folded" value="true" caseOf="false"/>
						
						<action method="dependentConditions" caseOf="true">
							<when condition="compare" compareTarget="{@form[params.image.srcLocation]:value}" compareBy="EQ" compareWith="bundle" at="initForm, postCommit">
								<action target="{@form[params.image.filename]:}" method="folded" value="false" caseOf="true"/>
								<action target="{@form[params.image.fileext]:}" method="folded" value="false" caseOf="true"/>
								<action target="{@form[params.image.url]:}" method="folded" value="true" caseOf="true"/>
								<action target="{@form[libraryImage]:}" method="folded" value="true" caseOf="true"/>
								<action target="{@form[localImage]:}" method="folded" value="true" caseOf="true"/>
							</when>
						</action>
						<action target="{@form[params.image.filename]:}" method="folded" value="true" caseOf="false"/>
						
						<action method="dependentConditions" caseOf="true">
							<when condition="compare" compareTarget="{@form[params.image.srcLocation]:value}" compareBy="EQ" compareWith="remoteFile" at="initForm, postCommit">
								<action target="{@form[params.image.filename]:}" method="folded" value="false" caseOf="true"/>
								<action target="{@form[params.image.url]:}" method="folded" value="true" caseOf="true"/>
								<action target="{@form[params.image.fileext]:}" method="folded" value="true" caseOf="true"/>
								<action target="{@form[libraryImage]:}" method="folded" value="true" caseOf="true"/>
								<action target="{@form[localImage]:}" method="folded" value="true" caseOf="true"/>
							</when>			
						</action>
						<action target="{@form[params.image.fileext]:}" method="folded" value="true" caseOf="false"/>
						
						<action method="dependentConditions" caseOf="true">
							<when condition="compare" compareTarget="{@form[params.image.srcLocation]:value}" compareBy="EQ" compareWith="gallery" at="initForm, postCommit">
								<action target="{@form[params.image.filename]:}" method="folded" value="true" caseOf="true"/>
								<action target="{@form[params.image.url]:}" method="folded" value="true" caseOf="true"/>
								<action target="{@form[params.image.fileext]:}" method="folded" value="true" caseOf="true"/>
								<action target="{@form[libraryImage]:}" method="folded" value="false" caseOf="true"/>
								<action target="{@form[localImage]:}" method="folded" value="true" caseOf="true"/>
							</when>
						</action>
						<action target="{@form[libraryImage]:}" method="folded" value="true" caseOf="false"/>
						
						<action method="dependentConditions" caseOf="true">
							<when condition="compare" compareTarget="{@form[params.image.srcLocation]:value}" compareBy="EQ" compareWith="local" at="initForm, postCommit">
								<action target="{@form[params.image.filename]:}" method="folded" value="true" caseOf="true"/>
								<action target="{@form[params.image.url]:}" method="folded" value="true" caseOf="true"/>
								<action target="{@form[params.image.fileext]:}" method="folded" value="true" caseOf="true"/>
								<action target="{@form[libraryImage]:}" method="folded" value="true" caseOf="true"/>
								<action target="{@form[localImage]:}" method="folded" value="false" caseOf="true"/>
							</when>
						</action>
						<action target="{@form[localImage]:}" method="folded" value="true" caseOf="false"/>

					</when>
				</dependentActions>
			</property>
			<property path="params.refTargetObject" input="spark.components.TextInput"/>
			
			<property path="params.image.srcLocation" dataType="array" input="spark.components.DropDownList" init="bundle">
				<dataSource>
					<data name="bundle"/>
					<data name="remoteFile"/>
					<data name="url"/>
					<data name="gallery"/>
					<data name="local"/>
				</dataSource>
				<dependentActions>
					<when condition="compare" compareTarget="{@form[params.image.srcLocation]:value}" compareBy="EQ" compareWith="bundle" at="initForm, postCommit">
						<action target="{@form[params.image.filename]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[params.image.fileext]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[params.image.url]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[libraryImage]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[localImage]:}" method="folded" value="true" caseOf="true"/>
					</when>
					<when condition="compare" compareTarget="{@form[params.image.srcLocation]:value}" compareBy="EQ" compareWith="url" at="initForm, postCommit">
						<action target="{@form[params.image.url]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[params.image.filename]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[params.image.fileext]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[libraryImage]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[localImage]:}" method="folded" value="true" caseOf="true"/>
					</when>
					<when condition="compare" compareTarget="{@form[params.image.srcLocation]:value}" compareBy="EQ" compareWith="remoteFile" at="initForm, postCommit">
						<action target="{@form[params.image.filename]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[params.image.url]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[params.image.fileext]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[libraryImage]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[localImage]:}" method="folded" value="true" caseOf="true"/>
					</when>			
					<when condition="compare" compareTarget="{@form[params.image.srcLocation]:value}" compareBy="EQ" compareWith="gallery" at="initForm, postCommit">
						<action target="{@form[libraryImage]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[params.image.filename]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[params.image.url]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[params.image.fileext]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[localImage]:}" method="folded" value="true" caseOf="true"/>
					</when>	
					<when condition="compare" compareTarget="{@form[params.image.srcLocation]:value}" compareBy="EQ" compareWith="local" at="initForm, postCommit">
						<action target="{@form[localImage]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[params.image.filename]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[params.image.fileext]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[params.image.url]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[libraryImage]:}" method="folded" value="true" caseOf="true"/>
					</when>		
				</dependentActions>
			</property>
			<property path="params.image.url" input="spark.components.TextInput">
				<validations><validation validator="RequiredValueValidator"/></validations>
			</property>
			<property path="params.image.filename" input="spark.components.TextInput">
				<validations><validation validator="RequiredValueValidator"/></validations>
			</property>
			<property path="params.image.fileext" input="spark.components.TextInput">
				<validations><validation validator="RequiredValueValidator"/></validations>
			</property>		
			<property path="params.image.filename" formKey="libraryImage" input="spark.components.TextInput">
				<validations><validation validator="RequiredValueValidator"/></validations>
			</property>
			<property path="params.image.filename" formKey="localImage" input="spark.components.TextInput">
				<validations><validation validator="RequiredValueValidator"/></validations>
			</property>
			
			<property path="params.animationTime" input="spark.components.DropDownList" init="" copyable="true">
				<dataSource>
					<data name=""/>
					<data name="01"/>
					<data name="02"/>
					<data name="03"/>
					<data name="04"/>
					<data name="05"/>
					<data name="06"/>
					<data name="07"/>
					<data name="08"/>
					<data name="09"/>
					<data name="10"/>
				</dataSource>	
			</property>
			
		</type>
		<type name="condition" input="HRule">
			<property path="params.condition" input="LabelWithButton"/>
		</type>
		<type name="resultEvents" input="HRule">
			<property path="actions.success" input="LabelWithButton"/>
			<property path="actions.error" input="LabelWithButton"/>
		</type>
	</properties>
</item>