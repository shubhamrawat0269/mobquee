<?xml version="1.0" encoding="utf-8"?>
<item targetClass="UploadRecordsToDB" category="DbAction" type="DataBase" method="UploadRecordsToDB">
	<properties>
		<type name="parameters" input="None">
			<property path="params.type" input="spark.components.DropDownList" init="CSV">
				<validations><validation validator="RequiredValueValidator"/></validations>
				<dataSource>
				 	<data name="CSV"/>
			  	</dataSource>
			</property>
			<property path="params.file.srcLocation" input="spark.components.DropDownList" init="device">
				<validations><validation validator="RequiredValueValidator"/></validations>
				<dataSource>
				 	<data name="device"/>
			  	</dataSource>
			  	<dependentActions>
 					<when condition="compare" compareTarget="{@form[params.file.srcLocation]:value}" compareBy="EQ" compareWith="bundle" at="initForm, postCommit">
						<action target="{@form[params.file.filename]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[params.file.url]:}" method="folded" value="true" caseOf="true"/>
					</when>
					<when condition="compare" compareTarget="{@form[params.file.srcLocation]:value}" compareBy="EQ" compareWith="url" at="initForm, postCommit">
						<action target="{@form[params.file.url]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[params.file.filename]:}" method="folded" value="true" caseOf="true"/>
					</when>
					<when condition="compare" compareTarget="{@form[params.file.srcLocation]:value}" compareBy="EQ" compareWith="remoteFile" at="initForm, postCommit">
						<action target="{@form[params.file.filename]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[params.file.url]:}" method="folded" value="true" caseOf="true"/>
					</when>			
					<when condition="compare" compareTarget="{@form[params.file.srcLocation]:value}" compareBy="EQ" compareWith="device" at="initForm, postCommit">
						<action target="{@form[params.file.filename]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[params.file.url]:}" method="folded" value="true" caseOf="true"/>
					</when>	
 				</dependentActions>
			</property>
			<property path="params.file.filename" input="spark.components.TextInput">
				<validations><validation validator="RequiredValueValidator"/></validations>
			</property>
			<property path="params.file.url" input="spark.components.TextInput">
				<validations><validation validator="RequiredValueValidator"/></validations>
			</property>
			<property path="params.table" input="spark.components.DropDownList">
				<validations><validation validator="RequiredValueValidator"/></validations>
			    <dataSource source="{@project:getDbTableDicsByServiceName()}" labelField="tablename" valueField="tablename"/>
			</property>
		</type>
				
		<type name="condition" input="HRule">
			<property path="params.condition" input="LabelWithButton"/>
		</type>
		<type name="resultEvents" input="HRule">
			<property path="actions.success" input="LabelWithButton"/>
			<property path="actions.error" input="LabelWithButton"/>
		</type>
	</properties>
</item>