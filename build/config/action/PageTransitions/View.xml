<?xml version="1.0" encoding="utf-8"?>
<item targetClass="View" category="ViewAction" type="Page" method="View"
		helpLink_EN="/go_to_child_page.htm" helpLink_JP="/act.htm#_ページ切替制御">
	<properties>
		<type name="parameters" input="None">
			<property path="params.pageName" input="spark.components.DropDownList" >
				<validations><validation validator="RequiredValueValidator"/></validations>
			    <dataSource source="{@project:getChildPageList(@page:pageid)}" labelField="Title" valueField="pageid"/>
			</property>
			
			<property path="params.transition" input="spark.components.DropDownList" >
			   <validations><validation validator="RequiredValueValidator"/></validations>
 			   <dataSource source="{@base:getTransitionList(@page:parentid)}" labelField="name" valueField="type"/>
 				<dependentActions>
 					<when at="initForm, postCommit" condition="compare" compareTarget="{@project:getViewType(@page:parentid)}" compareBy="NE" compareWith="SplitView">						
 						<action target="{@form[params.transition]:}" method="folded" value="true" caseOf="true"/>
 						<action target="{@form[params.transition]:}" method="folded" value="false" caseOf="false"/>
 					</when>	
 					<when condition="compare" compareTarget="{@form[params.transition]:value}" compareBy="EQ" compareWith="transitView" at="initForm, postCommit">
						<action target="{@form[params.viewPage]:}" method="setValue" value="{@base:setViewPageId(@page:pageid)}" caseOf="true"/>
						<action target="{@form[params.viewPage]:}" method="setValue" value="{@base:setViewPageId()}" caseOf="false"/>						
					</when>
 				</dependentActions>
 			</property>
			
			<property path="params.transferData" input="spark.components.CheckBox"/>
			
			<property path="params.animationType" input="spark.components.DropDownList" init="none" copyable="true">
				<dataSource>
					<data name="flip"/>
					<data name="slide"/>
					<data name="slidedown"/>
					<data name="slideup"/>
					<data name="turn"/>
					<data name="none"/>
				</dataSource>	
			</property>
			
		</type>
		<type name="condition" input="HRule">
			<property path="params.condition" input="LabelWithButton"/>
		</type>
		<type name="resultEvents" input="HRule">
			<property path="actions.success" input="LabelWithButton"/>
			<property path="actions.error" input="LabelWithButton"/>
		</type>
	</properties>
</item>
