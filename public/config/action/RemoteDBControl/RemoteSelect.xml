<?xml version="1.0" encoding="utf-8"?>
<item targetClass="RemoteSelect" category="ComAction" type="Comm" method="RemoteSelect"
		helpLink_EN="/remote_select.htm" helpLink_JP="/act.htm#_リモートDBレコード選択">
	<properties>
		<type name="parameters" input="None">			
			<property path="params.servicename" input="spark.components.DropDownList">
				<dataSource source="{@project:getServices(remote)}" labelField="label" valueField="value"/>
				<dependentActions>
					<when at="initForm,postCommit" stopCommit="true">
						<action target="{@form[params.tablename]:}" method="setOptions" value="{@project:getDbTableDicsByServiceName(@form[params.servicename]:value)}" labelField="tablename" valueField="tablename"/>
					</when>	
				</dependentActions>
			</property>
			<property path="params.tablename" input="spark.components.DropDownList">
				<validations><validation validator="RequiredValueValidator"/></validations>
			    <dataSource source="{@project:getDbTableDicsByServiceName(@form[params.servicename]:value)}" labelField="tablename" valueField="tablename"/>
				<dependentActions>
					<when at="initForm, postCommit" condition="compare" compareTarget="{@form[params.tablename]:value}" compareBy="NE" compareWith="">						
						<action target="{@form[params.resultFields]:}" method="setOptions" value="{@project:getDbFields(@form[params.servicename]:value, @form[params.tablename]:value)}" labelField="fieldname" valueField="fieldname" caseOf="true"/>
					</when>
				</dependentActions>				
			</property>
			<property path="params.where" input="spark.components.TextInput"/>
		    <property path="params.order" input="spark.components.TextInput"/>
			<property path="params.selectall" input="spark.components.CheckBox">
				<dependentActions>
					<when condition="compare" compareTarget="{@form[params.selectall]:value}" compareBy="EQ" compareWith="0" at="initForm, postCommit">
						<action target="{@form[params.resultFields]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[params.resultFields]:}" method="folded" value="true" caseOf="false"/>
					</when>
				</dependentActions>
			</property>
			<property path="params.resultFields" input="ListWithCheckBox" formheight="200" />
			<property path="params.encoderesponse" input="spark.components.CheckBox"/>
		</type>
		<type name="condition" input="HRule">
			<property path="params.condition" input="LabelWithButton"/>
		</type>
		<type name="resultEvents" input="HRule">
			<property path="actions.detectRecords" input="LabelWithButton"/>
			<property path="actions.success" input="LabelWithButton"/>
			<property path="actions.error" input="LabelWithButton"/>
		</type>
	</properties>
</item>