<?xml version="1.0" encoding="utf-8"?>
<item targetClass="SetDeviceDatatoDB" category="DbAction" type="DataBase" method="SetDeviceDatatoDB"
		helpLink_EN="" helpLink_JP="">
	<properties>
		<type name="parameters" input="None">	
			<property path="params.device" input="spark.components.TextInput">
				<validations><validation validator="RequiredValueValidator"/></validations>
			</property>
			<property path="params.startdatetime" input="spark.components.TextInput">
				<validations><validation validator="RequiredValueValidator"/></validations>
			</property>
			<property path="params.table" input="spark.components.DropDownList">
				<validations><validation validator="RequiredValueValidator"/></validations>
			    <dataSource source="{@project:getDbTableDics_notViews_ByServiceName()}" labelField="tablename" valueField="tablename"/>
			    <dependentActions>
					<when at="initForm, postCommit" condition="compare" compareTarget="{@form[params.table]:value}" compareBy="NE" compareWith="">						
						<action target="{@form[params.resultFields]:}" method="setOptions" value="{@project:getDbFields(@base:params.servicename, @form[params.table]:value)}" labelField="fieldname" valueField="fieldname" caseOf="true"/>
					</when>
				</dependentActions>				
			</property>										
			<property path="params.resultFields" input="ListWithCheckBox" selectall="true" formheight="200" />			
		</type>
		<type name="condition" input="HRule">
			<property path="params.condition" input="LabelWithButton"/>
		</type>
		<type name="resultEvents" input="HRule">
			<property path="actions.success" input="LabelWithButton"/>
			<property path="actions.error" input="LabelWithButton"/>
		</type>
	</properties>
</item>