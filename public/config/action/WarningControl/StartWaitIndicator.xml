<?xml version="1.0" encoding="utf-8"?>
<item targetClass="StartWaitIndicator" category="AlertAction" type="Warning" method="StartWaitIndicator"
		helpLink_EN="/start_wait_indicator2.htm" helpLink_JP="/act.htm#_待機画面表示‌">
	<properties>
		<type name="parameters" input="None">
			<property path="params.timeout" input="spark.components.NumericStepper" min="0" max="10000" inc="1">
				<validations><validation validator="RequiredValueValidator"/></validations>
			</property>	
			
			<property path="params.type" dataType="array" input="spark.components.DropDownList" init="Default">
				<dataSource>
					<data name="Default"/>
					<data name="Custom"/>
				</dataSource>
				<dependentActions>
					<when condition="compare" compareTarget="{@form[params.type]:value}" compareBy="EQ" compareWith="Default" at="initForm, postCommit">
						<action target="{@form[params.indicator]:}" method="folded" value="true" caseOf="true"/>
					</when>	
					<when condition="compare" compareTarget="{@form[params.type]:value}" compareBy="EQ" compareWith="Custom" at="initForm, postCommit">
						<action target="{@form[params.indicator]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[params.indicator]:}" method="folded" value="true" caseOf="false"/>
					</when>
				</dependentActions>
			</property>
			<property path="params.indicator" input="TextInputWithButton">
				<validations><validation validator="RequiredValueValidator"/></validations>
			</property>
			
			<property path="params.message" input="spark.components.TextInput"/>
		</type>
		<type name="condition" input="HRule">
			<property path="params.condition" input="LabelWithButton"/>
		</type>
		<type name="resultEvents" input="HRule">
			<property path="actions.success" input="LabelWithButton"/>
			<property path="actions.error" input="LabelWithButton"/>
		</type>
	</properties>
</item>