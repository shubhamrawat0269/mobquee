<?xml version="1.0" encoding="utf-8"?>
<item targetClass="UploadFiletoFolder" category="SystemControlAction" type="SystemControl" method="UploadFiletoFolder" partnerSpecific="true"
		helpLink_EN="" helpLink_JP="">
	<properties>
		<type name="parameters" input="None">	
			
			<property path="params.target" input="spark.components.DropDownList" init="mongo">
				<validations><validation validator="RequiredValueValidator"/></validations>
				<dataSource>
					<data name="file"/>
				 	<data name="mongo"/>
				 	<data name="SmartDocs"/>
			  	</dataSource>
			  	<dependentActions>
					<when at="initForm, postCommit" condition="compare" compareTarget="{@form[params.target]:value}" compareBy="EQ" compareWith="mongo">
						<action target="{@form[params.path]:}" method="folded" value="false" caseOf="false"/>
 						<action target="{@form[params.path]:}" method="folded" value="true" caseOf="true"/>
 					</when>
      			</dependentActions>
			</property>
			
			<property path="params.path" input="spark.components.TextInput">
				<validations><validation validator="RequiredValueValidator"/></validations>
			</property>
			
			<property path="params.name" input="spark.components.DropDownList">
       			<validations><validation validator="RequiredValueValidator"/></validations>
       			<dependentActions>
     				<when at="initForm">
     					<action target="{@form[params.name]:}" method="setOptions" value="{@project:getUiElementList(@page:pageid, @form[base.currentSettings]:value)}" caseOf="true"/>
     					<action target="{@form[params.name]:}"  method="setProperty" property="selectedIndex" value="-1" caseOf="true"/>
      				</when>
					<when condition="compare" compareTarget="{@form[params.name]:value}" compareBy="NE" compareWith="" at="initForm, postCommit">
						<action target="{@form[params.targetPage]:}" method="setValue" value="{@base:setViewPageId(@page:pageid)}" caseOf="true"/>
						<action target="{@form[params.targetPage]:}" method="setValue" value="{@base:setViewPageId()}" caseOf="false"/>						
					</when>
      			</dependentActions>
    		</property>
    		
		</type>
		
		<type name="condition" input="HRule">
			<property path="params.condition" input="LabelWithButton"/>
		</type>
		<type name="resultEvents" input="HRule">
			<property path="actions.success" input="LabelWithButton"/>
			<property path="actions.error" input="LabelWithButton"/>
		</type>
	</properties>
</item>