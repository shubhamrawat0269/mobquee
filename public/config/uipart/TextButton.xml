<?xml version="1.0" encoding="utf-8"?>
<item targetClass="TextButton" mockup="com.mobilous.builder.client.pageeditor.editor.mockup.TextButton.TextButtonView" visible="true" visibleInTableView="true" imagePath="assets/toolbox/ico_text.png" description="Here is the TextButton description"
		helpLink_EN="/text_button2.htm" helpLink_JP="/sheet002.htm#RANGE!A550">
	<properties>
		<type name="Type" @stopCommit="true">
			<property path="name" input="spark.components.TextInput">
				<validations>
					<validation validator="UniqUINameValidator">
						<args>
							<arg property="currentSettings" value="{@currentSettings:}"/>
							<arg property="pageContainerDic" value="{@page:}"/>
							<arg property="uiPartDic" value="{@base:}"/>
							<arg property="tableViewCellDic" value="{@tableviewCell:}"/>
							<arg property="toolbarUiDic" value="{@toolbarUiDic:}"/>
						</args>
					</validation>
				</validations>
			</property>
			<property path="fieldname" input="spark.components.DropDownList123">
				<dataSource source="@dbTable:fieldswithBracket" labelField="fieldname" />
				<dependentActions>
					<when condition="compare" compareTarget="@dbTable:" compareBy="IS_NULL_OR_EMPTY" at="initForm" @stopCommit="true">
						<action target="{@form[fieldname]:}" method="folded" value="true" caseOf="true"/>
						<action target="{@form[fieldname]:}" method="folded" value="false" caseOf="false"/>
						<action target="{@form[fieldname]:}" method="setOptions" value="@dbTable:fieldswithBracket" labelField="fieldname" caseOf="false"/> 
					</when>
					<when condition="compare" compareTarget="{@form[fieldname]:value}" compareBy="IS_NULL_OR_EMPTY" at="postCommit">
						<action target="{@form[title]:}" method="setValue" value="{@form[fieldname]:value}" chainedEvent="change" caseOf="false"/>
					</when>
				</dependentActions>
			</property>
			<property path="title" dataType="String" input="spark.components.TextArea" heightInLines="2" copyable="true"/>
			<property path="normalFont.lineBreakMode" dataType="array" input="spark.components.DropDownList" init="" copyable="true">
				<dataSource>
					<data name=""/>
					<data name="WordWrap"/>
				</dataSource>
			</property>
			<property path="hidden" dataType="Boolean" input="spark.components.CheckBox" value="false" copyable="true"/>
 			<property path="taborder" dataType="Number" input="spark.components.NumericStepper" min="0" max="1000" copyable="true"/>
		</type>
		<type name="Style" @stopCommit="true">
			<property path="backgroundGradient" dataType="String" input="spark.components.TextInput"/>
			<property path="borderWeight" dataType="Number" input="spark.components.NumericStepper" min="0" max="10" inc="1" copyable="true"/>
			<property path="borderColor" dataType="ColorDic" input="mx.controls.ColorPicker" copyable="true"/>
			<property path="borderColor.alpha" input="spark.components.NumericStepper" min="0.0" max="1.0" inc="0.1" copyable="true"/>
			<property path="cornerRadius" dataType="Number" input="spark.components.NumericStepper" min="0" max="25" inc="1" init="0" copyable="true"/>
		</type>
		
		<type name="normalFont" @stopCommit="true">
			<property path="normalFont.fontName" input="spark.components.DropDownList" dataType="array" init="system" copyable="true">
				<dataSource source="{@base:getFontNames()}" />
			</property>
			<property path="normalFont.fontSize" dataType="Number" input="spark.components.NumericStepper" min="6" max="100" inc="1" init="14" copyable="true"/>
			<property path="normalFont.fontWeight" dataType="Boolean" input="spark.components.CheckBox" value="false" copyable="true"/>
			<property path="normalFont.fontStyle" dataType="Boolean" input="spark.components.CheckBox" value="false" copyable="true"/>
			<property path="underline" dataType="Boolean" input="spark.components.CheckBox" value="false" copyable="true"/>
			<property path="strikeout" dataType="Boolean" input="spark.components.CheckBox" value="false" copyable="true"/>
			<property path="normalFont.textColor" dataType="ColorDic" input="mx.controls.ColorPicker" copyable="true"/>
			<property path="normalFont.textAlignment" dataType="custom" input="spark.components.RadioButton" init="center" copyable="true">
				<dataSource>
					<data name="left" path="left"/>  
					<data name="center" path="center"/>
					<data name="right" path="right"/>
				</dataSource>
			</property>
			<property path="verticalAlignment" dataType="custom" input="spark.components.RadioButton" init="middle" copyable="true">
				<dataSource>
					<data name="top" path="top"/>
					<data name="middle" path="middle"/>
					<data name="bottom" path="bottom"/>
				</dataSource>
			</property>
		</type>
		<type name="TextPadding" @stopCommit="true">
			<property path="padding.top" dataType="Number" input="spark.components.NumericStepper" min="0" max="100" inc="1" init="2" copyable="true"/>
			<property path="padding.left" dataType="Number" input="spark.components.NumericStepper" min="0" max="100" inc="1" init="2" copyable="true"/>
			<property path="padding.right" dataType="Number" input="spark.components.NumericStepper" min="0" max="100" inc="1" init="2" copyable="true"/>
			<property path="padding.bottom" dataType="Number" input="spark.components.NumericStepper" min="0" max="100" inc="1" init="2" copyable="true"/>
		</type>
		<type name="Geometry" @stopCommit="true">
			<property path="frame.x" dataType="Number" input="spark.components.NumericStepper" min="0" max="10000" copyable="true"/>
			<property path="frame.y" dataType="Number" input="spark.components.NumericStepper" min="0" max="10000" copyable="true"/>
			<property path="frame.width" dataType="Number" input="spark.components.NumericStepper" min="5" max="10000" init="88" copyable="true"/>
			<property path="frame.height" dataType="Number" input="spark.components.NumericStepper" min="5" max="10000" init="44" copyable="true"/>
			<property path="frame.rotation" input="spark.components.NumericStepper" min="0" max="360" inc="5" copyable="true"/>
		</type> 
	</properties>
</item>
