<?xml version="1.0" encoding="utf-8"?>
<item targetClass="Dialog" mockup="com.mobilous.builder.client.pageeditor.editor.mockup.Dialog.DialogView" visible="true" visibleInTableView="true" imagePath="assets/toolbox/ico_dialog.png" description="Here is the label description"
		>
	<properties>
		<type name="Type" @stopCommit="true">
			<property path="name" input="spark.components.TextInput">
				<validations>
					<validation validator="UniqUINameValidator">
						<args>
							<arg property="currentSettings" value="{@currentSettings:}"/>
							<arg property="pageContainerDic" value="{@page:}"/>
							<arg property="uiPartDic" value="{@base:}"/>
							<arg property="tableViewCellDic" value="{@tableviewCell:}"/>
							<arg property="toolbarUiDic" value="{@toolbarUiDic:}"/>
						</args>
					</validation>
				</validations>
			</property>
		</type>
		<type name="Style" @stopCommit="true">
			<property path="backgroundColor" dataType="ColorDic" input="mx.controls.ColorPicker" copyable="true"/>
			<property path="backgroundColor.alpha" input="spark.components.NumericStepper" min="0.0" max="1.0" inc="0.1" copyable="true"/>
			<property path="borderWeight" dataType="Number" input="spark.components.NumericStepper" min="0" max="10" inc="1" init="0" copyable="true"/>
			<property path="borderColor" dataType="ColorDic" input="mx.controls.ColorPicker" copyable="true"/>
			<property path="borderColor.alpha" input="spark.components.NumericStepper" min="0.0" max="1.0" inc="0.1" copyable="true"/>
			<property path="cornerRadius" dataType="Number" input="spark.components.NumericStepper" min="0" max="25" inc="1" init="0" copyable="true"/>
		</type>		
		
		<type name="DialogHeader" @stopCommit="true">
			<property path="showheader" dataType="Boolean" input="spark.components.CheckBox" value="1" copyable="true">
			 	<dependentActions>
			        <when condition="compare" compareTarget="{@form[showheader]:value}" compareBy="EQ" compareWith="0" at="initForm, postCommit">
			            <action target="{@form[heading]:}" method="folded" value="true" caseOf="true"/>
		            	<action target="{@form[heading]:}" method="folded" value="false" caseOf="false"/>
		            	<action target="{@form[headerfont.fontSize]:}" method="folded" value="true" caseOf="true"/>
		            	<action target="{@form[headerfont.fontSize]:}" method="folded" value="false" caseOf="false"/>
		            	<action target="{@form[headerfont.textColor]:}" method="folded" value="true" caseOf="true"/>
		            	<action target="{@form[headerfont.textColor]:}" method="folded" value="false" caseOf="false"/>
			            <action target="{@form[showclose]:}" method="folded" value="true" caseOf="true"/>
			            <action target="{@form[showclose]:}" method="folded" value="false" caseOf="false"/>
			            <action target="{@form[closeIcon]:}" method="folded" value="true" caseOf="true"/>
			            <action target="{@form[closeIcon]:}" method="folded" value="false" caseOf="false"/>
			        </when>
			    </dependentActions>
			</property>
			<property path="heading" input="spark.components.TextInput"/>
			<property path="headerfont.fontSize" dataType="Number" input="spark.components.NumericStepper" min="9" max="30" inc="1" init="16" copyable="true"/>
			<property path="headerfont.textColor" dataType="ColorDic" input="mx.controls.ColorPicker" copyable="true"/>
			<property path="showclose" dataType="Boolean" input="spark.components.CheckBox" value="1" copyable="true">
			 	<dependentActions>
			        <when condition="compare" compareTarget="{@form[showclose]:value}" compareBy="EQ" compareWith="0" at="initForm, postCommit">
			            <action target="{@form[closeIcon]:}" method="folded" value="true" caseOf="true"/>
			            <action target="{@form[closeIcon]:}" method="folded" value="false" caseOf="false"/>
			        </when>
			    </dependentActions>
			</property>
			<property path="closeIcon" dataType="ImageFileDic" input="TextInputWithButton" copyable="true"/>
		</type>
		<type name="DialogContent">			
			<property path="dataarray[0].height" input="spark.components.NumericStepper" min="40" max="10000" inc="1" init="100" copyable="true"/>
			<property formKey="dataarray[0].Fields" path="dataarray[0]" input="LabelWithButton" popup="CellEditor" source="Dialog">
				<dependentActions>
					<when at="preCommit" stopCommit="true">
						<action target="{@form[dataarray[0].Fields]:}" method="{@base:notifyChange()}"/>
					</when>
				</dependentActions>
			</property>
		</type>
		<type name="DialogActions" @stopCommit="true">
			<property path="showfooter" dataType="Boolean" input="spark.components.CheckBox" value="1" copyable="true">
			 	<dependentActions>
			        <when condition="compare" compareTarget="{@form[showfooter]:value}" compareBy="EQ" compareWith="0" at="initForm, postCommit">
			         	<action target="{@form[actionButtonsTintColor]:}" method="folded" value="true" caseOf="true"/>
		            	<action target="{@form[actionButtonsTintColor]:}" method="folded" value="false" caseOf="false"/>
		            	<action target="{@form[actionButtonsColor]:}" method="folded" value="true" caseOf="true"/>
		            	<action target="{@form[actionButtonsColor]:}" method="folded" value="false" caseOf="false"/>
			            <action target="{@form[actionButtons]:}" method="folded" value="true" caseOf="true"/>
		            	<action target="{@form[actionButtons]:}" method="folded" value="false" caseOf="false"/>
			            <action target="{@form[actionButtons[*].title]:}" method="folded" value="true" caseOf="true"/>
			            <action target="{@form[actionButtons[*].title]:}" method="folded" value="false" caseOf="false"/>
			            <action target="{@form[actionButtons[*].actions.clicked]:}" method="folded" value="true" caseOf="true"/>
			            <action target="{@form[actionButtons[*].actions.clicked]:}" method="folded" value="false" caseOf="false"/>
			        </when>
			    </dependentActions>
			</property>
			<property path="actionButtonsTintColor" dataType="ColorDic" input="mx.controls.ColorPicker" copyable="true"/>
			<property path="actionButtonsColor" dataType="ColorDic" input="mx.controls.ColorPicker" copyable="true"/>
			<property path="actionButtons" input="spark.components.List" labelField="title" itemClass="com.mobilous.builder.client.lib.adf.action.ActionSheetButtonDic" dragEnabled="true" sortable="false">
				<dependentActions>
					<when at="initForm, postIndexChange">
						<action target="{@form[actionButtons[*].title]:}" method="setValue" value="{@base:actionButtons[@form[actionButtons]:selectedIndex].title}"/>
						<action target="{@form[actionButtons[*].title]:}" method="setPath" value="{&quot;actionButtons[&quot; + @form[actionButtons]:selectedIndex + &quot;].title&quot;}"/>
						<action target="{@form[actionButtons[*].actions.clicked]:}" method="setValue" value="{@base:actionButtons[@form[actionButtons]:selectedIndex].actions.clicked}"/>
						<action target="{@form[actionButtons[*].actions.clicked]:}" method="setPath" value="{&quot;actionButtons[&quot; + @form[actionButtons]:selectedIndex + &quot;].actions.clicked&quot;}"/>
			       </when>
			    </dependentActions>
			</property>
			<property formKey="actionButtons[*].title" path="actionButtons[*].title" input="spark.components.TextInput"/>
			<property formKey="actionButtons[*].actions.clicked" path="actionButtons[*].actions.clicked" input="LabelWithButton"/>
		</type>
		
		<type name="Padding" @stopCommit="true">
			<property path="padding.top" dataType="Number" input="spark.components.NumericStepper" min="1" max="1000" inc="1" init="10" copyable="true"/>
			<property path="padding.left" dataType="Number" input="spark.components.NumericStepper" min="1" max="1000" inc="1" init="10" copyable="true"/>
			<property path="padding.right" dataType="Number" input="spark.components.NumericStepper" min="1" max="1000" inc="1" init="10" copyable="true"/>
			<property path="padding.bottom" dataType="Number" input="spark.components.NumericStepper" min="1" max="1000" inc="1" init="10" copyable="true"/>
		</type>
		
	</properties>
</item>
