<?xml version="1.0" encoding="utf-8"?>
<item targetClass="GoogleMap" mockup="com.mobilous.builder.client.pageeditor.editor.mockup.Map.GoogleMap" visible="true" imagePath="assets/toolbox/ico_map.png" description="Here is the label description"
		helpLink_EN="/map_control2.htm" helpLink_JP="/sheet002.htm#RANGE!A1100">
	<properties>
		<type name="Type" @stopCommit="true">
			<property path="name" input="spark.components.TextInput">
				<validations>
					<validation validator="UniqUINameValidator">
						<args>
							<arg property="currentSettings" value="{@currentSettings:}"/>
							<arg property="pageContainerDic" value="{@page:}"/>
							<arg property="uiPartDic" value="{@base:}"/>
							<arg property="tableViewCellDic" value="{@tableviewCell:}"/>
							<arg property="toolbarUiDic" value="{@toolbarUiDic:}"/>
						</args>
					</validation>
				</validations>
			</property>
			<property path="initialPosition" dataType="String" input="spark.components.TextInput" copyable="true" validator="RequiredValueValidator"/>
			<property path="zoom" dataType="Number" input="spark.components.NumericStepper" init="8" min="0" max="21" copyable="true"/>
			<property path="GPS" dataType="Boolean" input="spark.components.CheckBox" value="0" visible="1" copyable="true"/>
			<property path="hidden" dataType="Boolean" input="spark.components.CheckBox" value="false" copyable="true"/>
		</type>
		<type name="Actions">
			<property path="actions.regionWillChange" input="LabelWithButton" />			
			<property path="actions.regionDidChange" input="LabelWithButton" />
			<property path="actions.WillStartLoadingMap" input="LabelWithButton" />
			<property path="actions.DidFinishLoadingMap" input="LabelWithButton" />			
			<property path="actions.DidFailLoadingMap" input="LabelWithButton" />
		</type>
		<type name="Geometry" @stopCommit="true">
			<property path="frame.x" dataType="Number" input="spark.components.NumericStepper" min="0" max="9999" copyable="true"/>
			<property path="frame.y" dataType="Number" input="spark.components.NumericStepper" min="0" max="9999" copyable="true"/>
			<property path="frame.width" dataType="Number" input="spark.components.NumericStepper" min="100" max="9999" init="200" copyable="true"/>
			<property path="frame.height" dataType="Number" input="spark.components.NumericStepper" min="100" max="9999" init="200" copyable="true"/>
		</type> 
	</properties>
</item>
