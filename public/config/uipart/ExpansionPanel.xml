<?xml version="1.0" encoding="utf-8"?>
<item targetClass="ExpansionPanel" mockup="com.mobilous.builder.client.pageeditor.editor.mockup.Dialog.DialogView" visible="true" visibleInTableView="true" imagePath="assets/toolbox/ico_dialog.png" description="Here is the label description">
	<properties>
		<type name="Type" @stopCommit="true">
			<property path="name" input="spark.components.TextInput">
				<validations>
					<validation validator="UniqUINameValidator">
						<args>
							<arg property="currentSettings" value="{@currentSettings:}"/>
							<arg property="pageContainerDic" value="{@page:}"/>
							<arg property="uiPartDic" value="{@base:}"/>
							<arg property="tableViewCellDic" value="{@tableviewCell:}"/>
							<arg property="toolbarUiDic" value="{@toolbarUiDic:}"/>
						</args>
					</validation>
				</validations>
			</property>
			<property path="expanded" dataType="Boolean" input="spark.components.CheckBox" value="1" disable="true"/>
			<property path="hidden" dataType="Boolean" input="spark.components.CheckBox" value="false" copyable="true"/>
		</type>
		<type name="Style" @stopCommit="true">
			<property path="backgroundColor" dataType="ColorDic" input="mx.controls.ColorPicker" copyable="true"/>
			<property path="backgroundColor.alpha" input="spark.components.NumericStepper" min="0.0" max="1.0" inc="0.1" copyable="true"/>
		</type>
		<type name="panelSetting">
			<property path="borderWeight" dataType="Number" input="spark.components.NumericStepper" min="0" max="10" inc="1" init="0" copyable="true"/>
			<property path="borderColor" dataType="ColorDic" input="mx.controls.ColorPicker" copyable="true"/>
			<property path="borderColor.alpha" input="spark.components.NumericStepper" min="0.0" max="1.0" inc="0.1" copyable="true"/>
			<property path="cornerRadius" dataType="Number" input="spark.components.NumericStepper" min="0" max="25" inc="1" init="0" copyable="true"/>
			<property path="headerheight" input="spark.components.NumericStepper" min="30" max="100" inc="1" init="40" copyable="true"/>
			<property path="headerfont.fontSize" dataType="Number" input="spark.components.NumericStepper" min="12" max="30" inc="1" init="16" copyable="true"/>
			<property path="headerfont.fontWeight" dataType="Boolean" input="spark.components.CheckBox" value="true" copyable="true"/>
			<property path="headerfont.textColor" dataType="ColorDic" input="mx.controls.ColorPicker" copyable="true"/>
			<property path="headerIconPosition" dataType="array" input="spark.components.DropDownList" init="left">
				<dataSource>
					<data name="left"/>
					<data name="right"/>
				</dataSource>
			</property>		
			<property path="headerIconClose" input="TextInputWithButton"/>
			<property path="headerIconOpen" input="TextInputWithButton"/>			
			<property path="gap" input="spark.components.NumericStepper" min="1" max="20" inc="1" init="2"/>
		</type>	
		<type name="panelContent">
			<property formKey="panelItems" path="panelItems" input="spark.components.List" labelField="heading" limit="10" copyable="true">
			</property> 
			<property path="panelItems[*].id" dataType="Number" input="spark.components.NumericStepper" min="0" max="9" copyable="true"/>
			<property path="panelItems[*].expanded" dataType="Boolean" input="spark.components.CheckBox" value="true" copyable="true"/>
			<property path="panelItems[*].showheader" dataType="Boolean" input="spark.components.CheckBox" value="true" copyable="true">
				<dependentActions>
					<when condition="compare" compareTarget="{@form[panelItems[0].showheader]:value}" compareBy="EQ" compareWith="1" at="initForm, postCommit">
						<action target="{@form[panelItems[*].heading]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[panelItems[*].heading]:}" method="folded" value="true" caseOf="false"/>
						<action target="{@form[panelItems[*].subheading]:}" method="folded" value="false" caseOf="true"/>
						<action target="{@form[panelItems[*].subheading]:}" method="folded" value="true" caseOf="false"/>						
					</when>
				</dependentActions>
			</property> 
			<property path="panelItems[*].heading" input="spark.components.TextInput"/>
			<property path="panelItems[*].subheading" input="spark.components.TextInput" disable="true"/>
			<property path="panelItems[*].height" input="spark.components.NumericStepper" min="40" max="1000" inc="1" init="160" copyable="true"/>			
			<property formKey="panelItems[*].Fields" path="panelItems[*]" input="LabelWithButton" popup="CellEditor" source="ExpansionPanel" fieldname="Fields">
				<dependentActions>
					<when at="preCommit" stopCommit="true">
						<action target="{@form[panelItems[*].Fields]:}" method="{@base:notifyChange()}"/>
					</when>
				</dependentActions>
			</property>			
		</type>	
		<type name="Padding" @stopCommit="true">
			<property path="padding.top" dataType="Number" input="spark.components.NumericStepper" min="0" max="100" inc="1" init="5" copyable="true"/>
			<property path="padding.left" dataType="Number" input="spark.components.NumericStepper" min="0" max="100" inc="1" init="5" copyable="true"/>
			<property path="padding.right" dataType="Number" input="spark.components.NumericStepper" min="0" max="100" inc="1" init="5" copyable="true"/>
			<property path="padding.bottom" dataType="Number" input="spark.components.NumericStepper" min="0" max="100" inc="1" init="5" copyable="true"/>
		</type>
		<type name="Geometry" @stopCommit="true">
			<property path="frame.x" dataType="Number" input="spark.components.NumericStepper" min="0" max="10000" copyable="true"/>
			<property path="frame.y" dataType="Number" input="spark.components.NumericStepper" min="0" max="10000" copyable="true"/>
			<property path="frame.width" dataType="Number" input="spark.components.NumericStepper" min="50" max="10000" init="350" copyable="true"/>
			<property path="frame.height" dataType="Number" input="spark.components.NumericStepper" min="50" max="10000" init="300" disable="true"/>
		</type> 
	</properties>
</item>	