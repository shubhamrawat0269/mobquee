# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
#Test demo

trigger:
  batch: true
  branches:
    include:
      - refs/heads/master
      - refs/heads/development

pool:
  vmImage: "ubuntu-latest"
  #name: 'Android-Pool'

variables:
  fullCI: $[ startsWith(variables['build.sourceBranch'], 'refs/heads/development') ]
  serviceName: "appbuilder"
  artifactsPath: "build"
  publishDir: "appbuilder"

name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

steps:
  - task: NodeTool@0
    displayName: "Install Node.js"
    condition: eq(variables['fullCI'],True)
    enabled: true
    inputs:
      versionSpec: "18.x"

  - task: SonarQubePrepare@5
    displayName: Prepare SonarQube Analysis
    enabled: false
    inputs:
      SonarQube: "SonarQubeToken-Appbuilder"
      scannerMode: "CLI"
      extraProperties: |
        #sonar.exclusions=**/*.bin,**/src/test/java/com/mobilous/mobilegen/UITest.java
        sonar.projectName=$(serviceName)
        sonar.projectKey=$(serviceName)
        sonar.projectVersion=$(Build.BuildNumber)
        #sonar.sources=src
        sonar.sourceEncoding=utf-8
        sonar.scm.disabled=True
        #sonar.verbose=true
      # sonar.branch.name=develop
  - task: Bash@3
    condition: eq(variables['fullCI'],True)
    displayName: "npm install and build"
    enabled: true
    inputs:
      targetType: "inline"
      script: |
        npm install --save react@latest --force
        npm run build 
      workingDirectory: "."
  - task: SonarQubeAnalyze@5
    displayName: SonarQube Analysis
    enabled: false
  - task: SonarQubePublish@5
    displayName: Publish Quality Anylysis
    enabled: false
    inputs:
      pollingTimeoutSec: "300"
  - task: CopyFiles@2
    #condition: and(always(), eq(variables['Build.Reason'], 'PullRequest'))
    #condition: eq(variables['fullCI'],True)
    displayName: "Copy appbuilder build folder for publish"
    enabled: true
    inputs:
      SourceFolder: $(system.defaultWorkingDirectory)/$(artifactsPath)
      Contents: |
        **/**
        !pipeline/**
        !.git/**
      TargetFolder: "$(Build.ArtifactStagingDirectory)/$(publishDir)"

  - task: PublishBuildArtifacts@1
    #condition: or(and(always(), eq(variables['Build.Reason'], 'PullRequest')),eq(variables['fullCI'],True))
    #condition: eq(variables['fullCI'],True)
    displayName: "Publish Artifact: drop"
    enabled: true
    inputs:
      PathtoPublish: "$(build.artifactstagingdirectory)"
      ArtifactName: "$(Build.BuildNumber)"
      publishLocation: "Container"
      enabled: false
      condition: succeededOrFailed()
